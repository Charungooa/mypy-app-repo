name: Dev Build and Deploy

on:
  push:
    branches:
      - dev
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensure all tags are fetched

      - name: Log in to Azure Container Registry
        run: |
          echo "${{ secrets.ACR_DEV_PASSWORD }}" | docker login terraacr2025dev.azurecr.io -u ${{ secrets.ACR_DEV_USERNAME }} --password-stdin

      - name: Get Latest Version Tag
        id: get_version
        run: |
          git fetch --tags
          LATEST_TAG=$(git tag --sort=-v:refname | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | head -n 1)
          [[ -z "$LATEST_TAG" ]] && LATEST_TAG="v0.0.0"
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV

      - name: Increment Patch Version
        id: versioning
        run: |
          VERSION=${{ env.LATEST_TAG }}
          MAJOR=$(echo $VERSION | cut -d. -f1 | sed 's/v//')
          MINOR=$(echo $VERSION | cut -d. -f2)
          PATCH=$(echo $VERSION | cut -d. -f3)

          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION="v${MAJOR}.${MINOR}.${NEW_PATCH}"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Build and Push Docker Image to ACR
        run: |
          docker build -t terraacr2025dev.azurecr.io/myapp:${{ env.NEW_VERSION }} .
          docker push terraacr2025dev.azurecr.io/myapp:${{ env.NEW_VERSION }}

      - name: Update FluxCD GitOps Repository with New Image Tag
        run: |
          git clone https://github.com/charungooa/flux-gitops02.git
          cd flux-gitops02
          sed -i 's|image: terraacr2025dev.azurecr.io/myapp:.*|image: terraacr2025dev.azurecr.io/myapp:${{ env.NEW_VERSION }}|' dev/deployment.yaml

          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
          git add dev/deployment.yaml
          git commit -m "Update image to ${{ env.NEW_VERSION }}"
          git push https://x-access-token:${{ secrets.GH_PAT }}@github.com/charungooa/flux-gitops02.git

      - name: Create Git Tag for New Version
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"

          git tag ${{ env.NEW_VERSION }}
          git remote set-url origin https://x-access-token:${{ secrets.GH_PAT }}@github.com/charungooa/mypy-app-repo.git
          git push origin ${{ env.NEW_VERSION }}
