name: Prod Build and Deploy

permissions:
  contents: read
  pull-requests: read

on:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/workflows/**'  # Ignore workflow changes
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check if the workflow file was modified
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q '^.github/workflows/prod.yml$'; then
            echo "Workflow file updated, skipping execution."
            exit 0
          fi

      - name: Azure CLI Login
        run: |
          az login --service-principal \
            -u "${{ secrets.AZURE_CLIENT_ID }}" \
            -p "${{ secrets.AZURE_CLIENT_SECRET }}" \
            --tenant "${{ secrets.AZURE_TENANT_ID }}"
          az acr login --name terraacr2025prod || echo "Could not ACR login via az CLI."

      - name: Log in to Azure Container Registry
        run: |
          echo "${{ secrets.ACR_PROD_PASSWORD }}" | docker login terraacr2025prod.azurecr.io \
            -u "${{ secrets.ACR_PROD_USERNAME }}" --password-stdin

      - name: Determine Version Type
        id: version_type
        run: |
          VERSION_TYPE="patch"
          COMMIT_MSG=$(git log -1 --pretty=%B)
          echo "Latest commit message:"
          echo "$COMMIT_MSG"

          PR_NUMBER=$(echo "$COMMIT_MSG" | grep -oE 'Merge pull request #[0-9]+' | grep -oE '[0-9]+' || true)

          if [ -n "$PR_NUMBER" ]; then
            PR_LABELS=$(gh pr view "$PR_NUMBER" --json labels -q '.labels[].name' || true)
            echo "PR Labels: $PR_LABELS"

            if echo "$PR_LABELS" | grep -qi "major"; then
              VERSION_TYPE="major"
            elif echo "$PR_LABELS" | grep -qi "minor"; then
              VERSION_TYPE="minor"
            else
              if [[ "$COMMIT_MSG" == *"BREAKING CHANGE"* ]]; then
                VERSION_TYPE="major"
              elif [[ "$COMMIT_MSG" == *"feat:"* ]]; then
                VERSION_TYPE="minor"
              fi
            fi
          fi

          echo "VERSION_TYPE=$VERSION_TYPE" >> $GITHUB_ENV
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV
          echo "Version Type: $VERSION_TYPE"
          echo "PR Number: $PR_NUMBER"

      - name: Fetch latest image tag from Prod ACR
        id: versioning
        run: |
          echo "Fetching latest vX.Y.Z tag"
          ALL_TAGS=$(az acr repository show-tags --name terraacr2025prod \
                       --repository myapp \
                       --orderby time_desc \
                       --output tsv 2>/dev/null || true)

          LATEST_TAG=$(echo "$ALL_TAGS" | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | sort -V | tail -n 1)

          if [ -z "$LATEST_TAG" ]; then
            echo "'myapp' repository found, but no valid tags. Starting at v0.0.0."
            LATEST_TAG="v0.0.0"
          fi

          echo "Latest tag from ACR: $LATEST_TAG"

          MAJOR=$(echo "$LATEST_TAG" | awk -F. '{print substr($1,2)}')
          MINOR=$(echo "$LATEST_TAG" | awk -F. '{print $2}')
          PATCH=$(echo "$LATEST_TAG" | awk -F. '{print $3}')

          case "${VERSION_TYPE}" in
            major)
              MAJOR=$((MAJOR + 1))
              MINOR=0
              PATCH=0
              ;;
            minor)
              MINOR=$((MINOR + 1))
              PATCH=0
              ;;
            patch|*)
              PATCH=$((PATCH + 1))
              ;;
          esac

          IMAGE_TAG="v${MAJOR}.${MINOR}.${PATCH}"

          if [ -n "${PR_NUMBER}" ]; then
            IMAGE_TAG="${IMAGE_TAG}-pr${PR_NUMBER}"
          fi

          echo "NEW image tag (after increment) = $IMAGE_TAG"
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: Build and Push Docker Image
        run: |
          docker build -t terraacr2025prod.azurecr.io/myapp:$IMAGE_TAG .
          docker push terraacr2025prod.azurecr.io/myapp:$IMAGE_TAG

      - name: Update FluxCD GitOps Repository
        run: |
          git clone https://x-access-token:${{ secrets.GH_PAT }}@github.com/charungooa/flux-gitops02.git
          cd flux-gitops02

          sed -i "s|^\(\s*image:\s*\)terraacr2025prod.azurecr.io/myapp:.*|\1terraacr2025prod.azurecr.io/myapp:$IMAGE_TAG|" prod/deployment.yaml

          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
          git add prod/deployment.yaml
          git commit -m "Update image to $IMAGE_TAG" || echo "No changes to commit."
          git push https://x-access-token:${{ secrets.GH_PAT }}@github.com/charungooa/flux-gitops02.git || echo "No changes to push."